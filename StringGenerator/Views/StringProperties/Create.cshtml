@model StringGenerator.Models.StringProperties

@{
    ViewBag.Title = "Create";
}


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>String Properties</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        <div class="col-md-2">
            Number of Strings
        </div>
        <div class="col-md-10">
            @Html.EditorFor(model => model.StringCount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StringCount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-6">
            Number of Characters in each String
        </div>             <div class="col-md-10">
            @Html.EditorFor(model => model.StringLength, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StringLength, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-6">
            Which characters are allowed to occur in the strings?
        </div>

    </div>
    <div class="form-group">

        <div class="col-md-10">
            <div class="checkbox float-lg-start float-start">
                @Html.EditorFor(model => model.IsNumeric)
                @Html.ValidationMessageFor(model => model.IsNumeric, "", new { @class = "text-danger" })
            </div>
            Numeric digits (0-9)
        </div>
    </div>
    <div class="form-group">

        <div class="col-md-10">
            <div class="checkbox float-lg-start float-start">
                @Html.EditorFor(model => model.IsUpperCase)
                @Html.ValidationMessageFor(model => model.IsUpperCase, "", new { @class = "text-danger" })
            </div>
            Uppercase letters (A-Z)
        </div>
    </div>
    <div class="form-group">

        <div class="col-md-10">
            <div class="checkbox float-lg-start float-start">
                @Html.EditorFor(model => model.IsLowerCase)
                @Html.ValidationMessageFor(model => model.IsLowerCase, "", new { @class = "text-danger" })
            </div>
            Lowercase letters (a-z)
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            <div class="form-check">
                <!-- First option -->
                <input class="form-check-input" type="radio" name="IsUniqueString" id="uniqueStringOption1" value="true" checked>
                <label class="form-check-label" for="uniqueStringOption1">
                    Unique String
                </label>
            </div>
            <div class="form-check">
                <!-- Second option -->
                <input class="form-check-input" type="radio" name="IsUniqueString" id="uniqueStringOption2" value="false">
                <label class="form-check-label" for="uniqueStringOption2">
                    Not Unique String
                </label>
            </div>
            <!-- Validation message -->
            <div class="text-danger">
                @Html.ValidationMessageFor(model => model.IsUniqueString, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Generate Strings" class="btn btn-primary" />
            <input type="reset" value="Reset Form" class="btn btn-secondary" />
        </div>

    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
